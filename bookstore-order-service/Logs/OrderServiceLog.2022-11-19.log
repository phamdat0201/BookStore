[2022-11-19 19:39:48 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <background-preinit> org.hibernate.validator.internal.util.Version : HV000001: Hibernate Validator 6.1.5.Final
[2022-11-19 19:39:48 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-11-19 19:39:49 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> com.devd.spring.bookstoreorderservice.BookstoreOrderServiceApplication : The following profiles are active: local
[2022-11-19 19:39:51 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.data.repository.config.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFERRED mode.
[2022-11-19 19:39:51 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.data.repository.config.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 213ms. Found 6 JPA repository interfaces.
[2022-11-19 19:39:52 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.cloud.context.scope.GenericScope : BeanFactory id=1016b454-f73d-32d4-a986-7e904d87f4a5
[2022-11-19 19:39:52 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6528d339' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-11-19 19:39:52 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-11-19 19:39:52 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-11-19 19:39:53 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.boot.web.embedded.tomcat.TomcatWebServer : Tomcat initialized with port(s): 7001 (http)
[2022-11-19 19:39:53 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.apache.coyote.http11.Http11NioProtocol : Initializing ProtocolHandler ["http-nio-7001"]
[2022-11-19 19:39:53 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.apache.catalina.core.StandardService : Starting service [Tomcat]
[2022-11-19 19:39:53 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.apache.catalina.core.StandardEngine : Starting Servlet engine: [Apache Tomcat/9.0.38]
[2022-11-19 19:39:53 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] : Initializing Spring embedded WebApplicationContext
[2022-11-19 19:39:53 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4593 ms
[2022-11-19 19:39:54 ICT] WARN [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.config.sources.URLConfigurationSource : No URLs will be polled as dynamic configuration sources.
[2022-11-19 19:39:54 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.config.sources.URLConfigurationSource : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2022-11-19 19:39:54 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.config.DynamicPropertyFactory : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@69ed96e1
[2022-11-19 19:39:54 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Starting...
[2022-11-19 19:39:54 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Start completed.
[2022-11-19 19:39:54 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:bookstore_db'
[2022-11-19 19:39:55 ICT] WARN [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.boot.actuate.endpoint.EndpointId : Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2022-11-19 19:39:55 ICT] WARN [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration : Check result of the [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4dd425dc}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:9411/api/v2/spans": Connection refused; nested exception is java.net.ConnectException: Connection refused}]
[2022-11-19 19:39:55 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.flywaydb.core.internal.license.VersionPrinter : Flyway Community Edition 5.2.4 by Boxfuse
[2022-11-19 19:39:55 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.flywaydb.core.internal.database.DatabaseFactory : Database: jdbc:h2:mem:bookstore_db (H2 1.4)
[2022-11-19 19:39:56 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.flywaydb.core.internal.command.DbValidate : Successfully validated 2 migrations (execution time 00:00.040s)
[2022-11-19 19:39:56 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.flywaydb.core.internal.schemahistory.JdbcTableSchemaHistory : Creating Schema History table: "PUBLIC"."order_service_flyway_history"
[2022-11-19 19:39:56 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.flywaydb.core.internal.command.DbMigrate : Current version of schema "PUBLIC": << Empty Schema >>
[2022-11-19 19:39:56 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.flywaydb.core.internal.command.DbMigrate : Migrating schema "PUBLIC" to version 1 - order service schema
[2022-11-19 19:39:56 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.flywaydb.core.internal.command.DbMigrate : Migrating schema "PUBLIC" to version 2 - order service initial data
[2022-11-19 19:39:56 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.flywaydb.core.internal.command.DbMigrate : Successfully applied 2 migrations to schema "PUBLIC" (execution time 00:00.154s)
[2022-11-19 19:39:56 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor : Initializing ExecutorService 'applicationTaskExecutor'
[2022-11-19 19:39:56 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <task-1> org.hibernate.jpa.internal.util.LogHelper : HHH000204: Processing PersistenceUnitInfo [name: default]
[2022-11-19 19:39:56 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <task-1> org.hibernate.Version : HHH000412: Hibernate ORM core version 5.4.21.Final
[2022-11-19 19:39:56 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <task-1> org.hibernate.annotations.common.Version : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[2022-11-19 19:39:56 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <task-1> org.hibernate.dialect.Dialect : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2022-11-19 19:39:57 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.data.repository.config.DeferredRepositoryInitializationListener : Triggering deferred initialization of Spring Data repositories…
[2022-11-19 19:39:57 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <task-1> org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2022-11-19 19:39:57 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <task-1> org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
[2022-11-19 19:39:58 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.data.repository.config.DeferredRepositoryInitializationListener : Spring Data repositories initialized!
[2022-11-19 19:39:58 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.data.repository.config.DeferredRepositoryInitializationListener : Triggering deferred initialization of Spring Data repositories…
[2022-11-19 19:39:58 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.data.repository.config.DeferredRepositoryInitializationListener : Spring Data repositories initialized!
[2022-11-19 19:39:58 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.data.repository.config.DeferredRepositoryInitializationListener : Triggering deferred initialization of Spring Data repositories…
[2022-11-19 19:39:58 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.data.repository.config.DeferredRepositoryInitializationListener : Spring Data repositories initialized!
[2022-11-19 19:39:58 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.data.repository.config.DeferredRepositoryInitializationListener : Triggering deferred initialization of Spring Data repositories…
[2022-11-19 19:39:58 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.data.repository.config.DeferredRepositoryInitializationListener : Spring Data repositories initialized!
[2022-11-19 19:40:00 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver : Exposing 22 endpoint(s) beneath base path '/actuator'
[2022-11-19 19:40:01 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.security.web.DefaultSecurityFilterChain : Creating filter chain: Ant [pattern='/v2/api-docs'], []
[2022-11-19 19:40:01 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.security.web.DefaultSecurityFilterChain : Creating filter chain: Ant [pattern='/configuration/ui'], []
[2022-11-19 19:40:01 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.security.web.DefaultSecurityFilterChain : Creating filter chain: Ant [pattern='/swagger-resources/**'], []
[2022-11-19 19:40:01 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.security.web.DefaultSecurityFilterChain : Creating filter chain: Ant [pattern='/configuration/**'], []
[2022-11-19 19:40:01 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.security.web.DefaultSecurityFilterChain : Creating filter chain: Ant [pattern='/swagger-ui.html'], []
[2022-11-19 19:40:01 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.security.web.DefaultSecurityFilterChain : Creating filter chain: Ant [pattern='/webjars/**'], []
[2022-11-19 19:40:01 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.security.web.DefaultSecurityFilterChain : Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3c657771, org.springframework.security.web.context.SecurityContextPersistenceFilter@76603c44, org.springframework.security.web.header.HeaderWriterFilter@3ec8c874, org.springframework.web.filter.CorsFilter@171b82ea, org.springframework.security.web.authentication.logout.LogoutFilter@37acf9b1, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@3701acee, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4015c65b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@53af65eb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@49d5db99, org.springframework.security.web.session.SessionManagementFilter@135fb22d, org.springframework.security.web.access.ExceptionTranslationFilter@3818609f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@158bd27d]
[2022-11-19 19:40:01 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.security.web.DefaultSecurityFilterChain : Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@579071ef, org.springframework.security.web.context.SecurityContextPersistenceFilter@3808bdfc, org.springframework.security.web.header.HeaderWriterFilter@3c320c8b, org.springframework.web.filter.CorsFilter@311683ea, org.springframework.security.web.authentication.logout.LogoutFilter@6a4940e1, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3656a6cd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7194f5b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3a296643, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5d5ad1e2, org.springframework.security.web.session.SessionManagementFilter@2d7e6c8c, org.springframework.security.web.access.ExceptionTranslationFilter@47ffce5d]
[2022-11-19 19:40:01 ICT] WARN [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.config.sources.URLConfigurationSource : No URLs will be polled as dynamic configuration sources.
[2022-11-19 19:40:01 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.config.sources.URLConfigurationSource : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2022-11-19 19:40:02 ICT] WARN [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2022-11-19 19:40:02 ICT] WARN [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
[2022-11-19 19:40:02 ICT] WARN [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.cloud.netflix.core.CoreAutoConfiguration : This module is deprecated. It will be removed in the next major release. Please use spring-cloud-netflix-hystrix instead.
[2022-11-19 19:40:02 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.cloud.netflix.eureka.InstanceInfoFactory : Setting initial instance status as: STARTING
[2022-11-19 19:40:03 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Initializing Eureka in region us-east-1
[2022-11-19 19:40:03 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.provider.DiscoveryJerseyProvider : Using JSON encoding codec LegacyJacksonJson
[2022-11-19 19:40:03 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.provider.DiscoveryJerseyProvider : Using JSON decoding codec LegacyJacksonJson
[2022-11-19 19:40:03 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.provider.DiscoveryJerseyProvider : Using XML encoding codec XStreamXml
[2022-11-19 19:40:03 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.provider.DiscoveryJerseyProvider : Using XML decoding codec XStreamXml
[2022-11-19 19:40:03 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2022-11-19 19:40:03 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Disable delta property : false
[2022-11-19 19:40:03 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Single vip registry refresh property : null
[2022-11-19 19:40:03 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Force full registry fetch : false
[2022-11-19 19:40:03 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Application is null : false
[2022-11-19 19:40:03 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Registered Applications size is zero : true
[2022-11-19 19:40:03 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Application version is -1: true
[2022-11-19 19:40:03 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Getting all instance registry info from the eureka server
[2022-11-19 19:40:03 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : The response status is 200
[2022-11-19 19:40:04 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Starting heartbeat executor: renew interval is: 30
[2022-11-19 19:40:04 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.InstanceInfoReplicator : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2022-11-19 19:40:04 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Discovery Client initialized at timestamp 1668861604011 with initial instances count: 4
[2022-11-19 19:40:04 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry : Registering application BOOKSTORE-ORDER-SERVICE with eureka with status UP
[2022-11-19 19:40:04 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Saw local status change event StatusChangeEvent [timestamp=1668861604081, current=UP, previous=STARTING]
[2022-11-19 19:40:04 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-InstanceInfoReplicator-0> com.netflix.discovery.DiscoveryClient : DiscoveryClient_BOOKSTORE-ORDER-SERVICE/192.168.1.10:bookstore-order-service:7001: registering service...
[2022-11-19 19:40:04 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.apache.coyote.http11.Http11NioProtocol : Starting ProtocolHandler ["http-nio-7001"]
[2022-11-19 19:40:04 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-InstanceInfoReplicator-0> com.netflix.discovery.DiscoveryClient : DiscoveryClient_BOOKSTORE-ORDER-SERVICE/192.168.1.10:bookstore-order-service:7001 - registration status: 204
[2022-11-19 19:40:04 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.boot.web.embedded.tomcat.TomcatWebServer : Tomcat started on port(s): 7001 (http) with context path ''
[2022-11-19 19:40:04 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration : Updating port to 7001
[2022-11-19 19:40:04 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.data.repository.config.DeferredRepositoryInitializationListener : Triggering deferred initialization of Spring Data repositories…
[2022-11-19 19:40:04 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.data.repository.config.DeferredRepositoryInitializationListener : Spring Data repositories initialized!
[2022-11-19 19:40:04 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <main> com.devd.spring.bookstoreorderservice.BookstoreOrderServiceApplication : Started BookstoreOrderServiceApplication in 17.486 seconds (JVM running for 18.202)
[2022-11-19 19:42:38 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <http-nio-7001-exec-2> org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] : Initializing Spring DispatcherServlet 'dispatcherServlet'
[2022-11-19 19:42:38 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <http-nio-7001-exec-2> org.springframework.web.servlet.DispatcherServlet : Initializing Servlet 'dispatcherServlet'
[2022-11-19 19:42:38 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <http-nio-7001-exec-2> org.springframework.web.servlet.DispatcherServlet : Completed initialization in 77 ms
[2022-11-19 19:42:45 ICT] WARN [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4dd425dc}> zipkin2.reporter.AsyncReporter$BoundedAsyncReporter : Spans were dropped due to exceptions. All subsequent errors will be logged at FINE level.
[2022-11-19 19:42:45 ICT] WARN [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4dd425dc}> zipkin2.reporter.AsyncReporter$BoundedAsyncReporter : Dropped 2 spans due to ResourceAccessException(I/O error on POST request for "http://localhost:9411/api/v2/spans": Connection refused; nested exception is java.net.ConnectException: Connection refused)
org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:9411/api/v2/spans": Connection refused; nested exception is java.net.ConnectException: Connection refused
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:748)
	at org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateSenderConfiguration.java:228)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:641)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender.post(RestTemplateSender.java:129)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:142)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:132)
	at zipkin2.Call$Base.execute(Call.java:380)
	at zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:285)
	at zipkin2.reporter.AsyncReporter$Flusher.run(AsyncReporter.java:354)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:660)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
	at java.base/java.net.Socket.connect(Socket.java:648)
	at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:177)
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:474)
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:569)
	at java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:341)
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:362)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1261)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1194)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1082)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1016)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:53)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:739)
	... 9 common frames omitted
[2022-11-19 19:43:00 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> com.devd.spring.bookstorecommons.feign.CatalogFeignClient : [CatalogFeignClient#getProduct] ---> GET http://bookstore-catalog-service/product/1 HTTP/1.1
[2022-11-19 19:43:00 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> com.devd.spring.bookstorecommons.feign.CatalogFeignClient : [CatalogFeignClient#getProduct] Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsid2ViIl0sInVzZXJfaWQiOiI0MDgzZjFlZS1hODA2LTQ1YmYtYmU0OC1hMjM1OTAwNThkNzIiLCJ1c2VyX25hbWUiOiJwaGFtZGF0Iiwic2NvcGUiOlsicmVhZCIsIndyaXRlIl0sImV4cCI6MTY2OTEyMDk1MywiYXV0aG9yaXRpZXMiOlsiU1RBTkRBUkRfVVNFUiJdLCJqdGkiOiJiZDY5MzJlMy03NTM4LTQ4OTItYjVkOS1jNDY3YWY5ZDJmNTUiLCJjbGllbnRfaWQiOiI5M2VkNDUzZS1iN2FjLTQxOTItYTZkNC1jNDVmYWUwZDk5YWMifQ.EKJ2pndsLn3UjK1LvCWSrn1Z9Vf3W_3A47u2qGRVPrvkAOU_oGLJ01MJNTKRWh6JEgV1-VxbvY9fKpQSG3jvu2tR5CSFeaqTYjwHUg858LU4ERVCQj_jv3iFMMo6ggbtsKV1MLbtEuNW-IWrdEpqoVfXjNBQtTGMVm095WH6PiuQbL_ZOyIDhaXSvvuCjr44t9YrT5Mh6AHEOQTMPghzR24ulDAv1WGJb4JZfQTaH4yA_HCOkRaXQ1YU3tS0WAjmV1awXTiUW-2RZ_tN1x-C631XalzZ5fxkdvYgl-xTL_9Wgzfu7cHu-k17iDDSFR3xIezoKXScy2GJXekS2WHdGw
[2022-11-19 19:43:00 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> com.devd.spring.bookstorecommons.feign.CatalogFeignClient : [CatalogFeignClient#getProduct] ---> END HTTP (0-byte body)
[2022-11-19 19:43:00 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> com.netflix.config.ChainedDynamicProperty : Flipping property: bookstore-catalog-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2022-11-19 19:43:00 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> com.netflix.util.concurrent.ShutdownEnabledTimer : Shutdown hook installed for: NFLoadBalancer-PingTimer-bookstore-catalog-service
[2022-11-19 19:43:00 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> com.netflix.loadbalancer.BaseLoadBalancer : Client: bookstore-catalog-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=bookstore-catalog-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2022-11-19 19:43:00 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> com.netflix.loadbalancer.DynamicServerListLoadBalancer : Using serverListUpdater PollingServerListUpdater
[2022-11-19 19:43:00 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> com.netflix.config.ChainedDynamicProperty : Flipping property: bookstore-catalog-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2022-11-19 19:43:00 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> com.netflix.loadbalancer.DynamicServerListLoadBalancer : DynamicServerListLoadBalancer for client bookstore-catalog-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=bookstore-catalog-service,current list of Servers=[192.168.1.10:6001],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.10:6001;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 ICT 1970;	First connection made: Thu Jan 01 08:00:00 ICT 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@a680d21
[2022-11-19 19:43:00 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> org.springframework.data.repository.config.DeferredRepositoryInitializationListener : Triggering deferred initialization of Spring Data repositories…
[2022-11-19 19:43:00 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> org.springframework.data.repository.config.DeferredRepositoryInitializationListener : Spring Data repositories initialized!
[2022-11-19 19:43:00 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> com.devd.spring.bookstorecommons.feign.CatalogFeignClient : [CatalogFeignClient#getProduct] <--- HTTP/1.1 200 (611ms)
[2022-11-19 19:43:00 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> com.devd.spring.bookstorecommons.feign.CatalogFeignClient : [CatalogFeignClient#getProduct] access-control-allow-headers: *
[2022-11-19 19:43:00 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> com.devd.spring.bookstorecommons.feign.CatalogFeignClient : [CatalogFeignClient#getProduct] access-control-allow-methods: *
[2022-11-19 19:43:00 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> com.devd.spring.bookstorecommons.feign.CatalogFeignClient : [CatalogFeignClient#getProduct] access-control-allow-origin: *
[2022-11-19 19:43:00 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> com.devd.spring.bookstorecommons.feign.CatalogFeignClient : [CatalogFeignClient#getProduct] cache-control: no-cache, no-store, max-age=0, must-revalidate
[2022-11-19 19:43:00 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> com.devd.spring.bookstorecommons.feign.CatalogFeignClient : [CatalogFeignClient#getProduct] connection: keep-alive
[2022-11-19 19:43:00 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> com.devd.spring.bookstorecommons.feign.CatalogFeignClient : [CatalogFeignClient#getProduct] content-type: application/json
[2022-11-19 19:43:00 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> com.devd.spring.bookstorecommons.feign.CatalogFeignClient : [CatalogFeignClient#getProduct] date: Sat, 19 Nov 2022 12:43:00 GMT
[2022-11-19 19:43:00 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> com.devd.spring.bookstorecommons.feign.CatalogFeignClient : [CatalogFeignClient#getProduct] expires: 0
[2022-11-19 19:43:00 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> com.devd.spring.bookstorecommons.feign.CatalogFeignClient : [CatalogFeignClient#getProduct] keep-alive: timeout=60
[2022-11-19 19:43:00 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> com.devd.spring.bookstorecommons.feign.CatalogFeignClient : [CatalogFeignClient#getProduct] pragma: no-cache
[2022-11-19 19:43:00 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> com.devd.spring.bookstorecommons.feign.CatalogFeignClient : [CatalogFeignClient#getProduct] transfer-encoding: chunked
[2022-11-19 19:43:00 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> com.devd.spring.bookstorecommons.feign.CatalogFeignClient : [CatalogFeignClient#getProduct] vary: Access-Control-Request-Headers
[2022-11-19 19:43:00 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> com.devd.spring.bookstorecommons.feign.CatalogFeignClient : [CatalogFeignClient#getProduct] vary: Access-Control-Request-Method
[2022-11-19 19:43:00 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> com.devd.spring.bookstorecommons.feign.CatalogFeignClient : [CatalogFeignClient#getProduct] vary: Origin
[2022-11-19 19:43:00 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> com.devd.spring.bookstorecommons.feign.CatalogFeignClient : [CatalogFeignClient#getProduct] x-content-type-options: nosniff
[2022-11-19 19:43:00 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> com.devd.spring.bookstorecommons.feign.CatalogFeignClient : [CatalogFeignClient#getProduct] x-xss-protection: 1; mode=block
[2022-11-19 19:43:00 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> com.devd.spring.bookstorecommons.feign.CatalogFeignClient : [CatalogFeignClient#getProduct] 
[2022-11-19 19:43:00 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> com.devd.spring.bookstorecommons.feign.CatalogFeignClient : [CatalogFeignClient#getProduct] {"productId":"1","productName":"Modern Indian Literature: Poems and Short Stories","description":"Modern Indian Literature: Poems and Short Stories","price":85.0,"productCategory":"Literature","availableItemCount":345,"averageRating":3.0,"noOfRatings":3,"imageId":"c16108e1-8276-41ad-bf12-4aee4c0a7e65__IndModernLiterature.jpg"}
[2022-11-19 19:43:00 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 06a9dcba5ee4e83d], [SpanId -> 281c04170384e0ca] 
      <http-nio-7001-exec-8> com.devd.spring.bookstorecommons.feign.CatalogFeignClient : [CatalogFeignClient#getProduct] <--- END HTTP (328-byte body)
[2022-11-19 19:43:01 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <PollingServerListUpdater-0> com.netflix.config.ChainedDynamicProperty : Flipping property: bookstore-catalog-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2022-11-19 19:45:03 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <AsyncResolver-bootstrap-executor-0> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] ---> GET http://bookstore-billing-service/address/933a8f2b-53e2-478f-922b-e84a3a47bb46 HTTP/1.1
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsid2ViIl0sInVzZXJfaWQiOiI0MDgzZjFlZS1hODA2LTQ1YmYtYmU0OC1hMjM1OTAwNThkNzIiLCJ1c2VyX25hbWUiOiJwaGFtZGF0Iiwic2NvcGUiOlsicmVhZCIsIndyaXRlIl0sImV4cCI6MTY2OTEyMDk1MywiYXV0aG9yaXRpZXMiOlsiU1RBTkRBUkRfVVNFUiJdLCJqdGkiOiJiZDY5MzJlMy03NTM4LTQ4OTItYjVkOS1jNDY3YWY5ZDJmNTUiLCJjbGllbnRfaWQiOiI5M2VkNDUzZS1iN2FjLTQxOTItYTZkNC1jNDVmYWUwZDk5YWMifQ.EKJ2pndsLn3UjK1LvCWSrn1Z9Vf3W_3A47u2qGRVPrvkAOU_oGLJ01MJNTKRWh6JEgV1-VxbvY9fKpQSG3jvu2tR5CSFeaqTYjwHUg858LU4ERVCQj_jv3iFMMo6ggbtsKV1MLbtEuNW-IWrdEpqoVfXjNBQtTGMVm095WH6PiuQbL_ZOyIDhaXSvvuCjr44t9YrT5Mh6AHEOQTMPghzR24ulDAv1WGJb4JZfQTaH4yA_HCOkRaXQ1YU3tS0WAjmV1awXTiUW-2RZ_tN1x-C631XalzZ5fxkdvYgl-xTL_9Wgzfu7cHu-k17iDDSFR3xIezoKXScy2GJXekS2WHdGw
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] ---> END HTTP (0-byte body)
[2022-11-19 19:45:31 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.netflix.config.ChainedDynamicProperty : Flipping property: bookstore-billing-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2022-11-19 19:45:31 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.netflix.util.concurrent.ShutdownEnabledTimer : Shutdown hook installed for: NFLoadBalancer-PingTimer-bookstore-billing-service
[2022-11-19 19:45:31 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.netflix.loadbalancer.BaseLoadBalancer : Client: bookstore-billing-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=bookstore-billing-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2022-11-19 19:45:31 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.netflix.loadbalancer.DynamicServerListLoadBalancer : Using serverListUpdater PollingServerListUpdater
[2022-11-19 19:45:31 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.netflix.config.ChainedDynamicProperty : Flipping property: bookstore-billing-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2022-11-19 19:45:31 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.netflix.loadbalancer.DynamicServerListLoadBalancer : DynamicServerListLoadBalancer for client bookstore-billing-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=bookstore-billing-service,current list of Servers=[192.168.1.10:5001],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.10:5001;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 ICT 1970;	First connection made: Thu Jan 01 08:00:00 ICT 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5bcd05f3
[2022-11-19 19:45:31 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> org.springframework.data.repository.config.DeferredRepositoryInitializationListener : Triggering deferred initialization of Spring Data repositories…
[2022-11-19 19:45:31 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> org.springframework.data.repository.config.DeferredRepositoryInitializationListener : Spring Data repositories initialized!
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] <--- HTTP/1.1 200 (261ms)
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] access-control-allow-headers: *
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] access-control-allow-methods: *
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] access-control-allow-origin: *
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] cache-control: no-cache, no-store, max-age=0, must-revalidate
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] connection: keep-alive
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] content-type: application/json
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] date: Sat, 19 Nov 2022 12:45:31 GMT
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] expires: 0
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] keep-alive: timeout=60
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] pragma: no-cache
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] transfer-encoding: chunked
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] vary: Access-Control-Request-Headers
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] vary: Access-Control-Request-Method
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] vary: Origin
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] x-content-type-options: nosniff
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] x-xss-protection: 1; mode=block
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] 
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] {"addressId":"933a8f2b-53e2-478f-922b-e84a3a47bb46","userId":"4083f1ee-a806-45bf-be48-a23590058d72","addressLine1":"123 Nguyễn Văn Bảo","addressLine2":"","city":"Hồ Chí Minh","state":"Gò Vấp","postalCode":"8000000","country":"VN","phone":"0339686430"}
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] <--- END HTTP (262-byte body)
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] ---> GET http://bookstore-billing-service/address/933a8f2b-53e2-478f-922b-e84a3a47bb46 HTTP/1.1
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsid2ViIl0sInVzZXJfaWQiOiI0MDgzZjFlZS1hODA2LTQ1YmYtYmU0OC1hMjM1OTAwNThkNzIiLCJ1c2VyX25hbWUiOiJwaGFtZGF0Iiwic2NvcGUiOlsicmVhZCIsIndyaXRlIl0sImV4cCI6MTY2OTEyMDk1MywiYXV0aG9yaXRpZXMiOlsiU1RBTkRBUkRfVVNFUiJdLCJqdGkiOiJiZDY5MzJlMy03NTM4LTQ4OTItYjVkOS1jNDY3YWY5ZDJmNTUiLCJjbGllbnRfaWQiOiI5M2VkNDUzZS1iN2FjLTQxOTItYTZkNC1jNDVmYWUwZDk5YWMifQ.EKJ2pndsLn3UjK1LvCWSrn1Z9Vf3W_3A47u2qGRVPrvkAOU_oGLJ01MJNTKRWh6JEgV1-VxbvY9fKpQSG3jvu2tR5CSFeaqTYjwHUg858LU4ERVCQj_jv3iFMMo6ggbtsKV1MLbtEuNW-IWrdEpqoVfXjNBQtTGMVm095WH6PiuQbL_ZOyIDhaXSvvuCjr44t9YrT5Mh6AHEOQTMPghzR24ulDAv1WGJb4JZfQTaH4yA_HCOkRaXQ1YU3tS0WAjmV1awXTiUW-2RZ_tN1x-C631XalzZ5fxkdvYgl-xTL_9Wgzfu7cHu-k17iDDSFR3xIezoKXScy2GJXekS2WHdGw
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] ---> END HTTP (0-byte body)
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] <--- HTTP/1.1 200 (40ms)
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] access-control-allow-headers: *
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] access-control-allow-methods: *
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] access-control-allow-origin: *
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] cache-control: no-cache, no-store, max-age=0, must-revalidate
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] connection: keep-alive
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] content-type: application/json
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] date: Sat, 19 Nov 2022 12:45:31 GMT
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] expires: 0
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] keep-alive: timeout=60
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] pragma: no-cache
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] transfer-encoding: chunked
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] vary: Access-Control-Request-Headers
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] vary: Access-Control-Request-Method
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] vary: Origin
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] x-content-type-options: nosniff
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] x-xss-protection: 1; mode=block
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] 
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] {"addressId":"933a8f2b-53e2-478f-922b-e84a3a47bb46","userId":"4083f1ee-a806-45bf-be48-a23590058d72","addressLine1":"123 Nguyễn Văn Bảo","addressLine2":"","city":"Hồ Chí Minh","state":"Gò Vấp","postalCode":"8000000","country":"VN","phone":"0339686430"}
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] <--- END HTTP (262-byte body)
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] ---> GET http://bookstore-payment-service/paymentMethod/pm_1M5qQEG9R9y827nt0gZwbDEN HTTP/1.1
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsid2ViIl0sInVzZXJfaWQiOiI0MDgzZjFlZS1hODA2LTQ1YmYtYmU0OC1hMjM1OTAwNThkNzIiLCJ1c2VyX25hbWUiOiJwaGFtZGF0Iiwic2NvcGUiOlsicmVhZCIsIndyaXRlIl0sImV4cCI6MTY2OTEyMDk1MywiYXV0aG9yaXRpZXMiOlsiU1RBTkRBUkRfVVNFUiJdLCJqdGkiOiJiZDY5MzJlMy03NTM4LTQ4OTItYjVkOS1jNDY3YWY5ZDJmNTUiLCJjbGllbnRfaWQiOiI5M2VkNDUzZS1iN2FjLTQxOTItYTZkNC1jNDVmYWUwZDk5YWMifQ.EKJ2pndsLn3UjK1LvCWSrn1Z9Vf3W_3A47u2qGRVPrvkAOU_oGLJ01MJNTKRWh6JEgV1-VxbvY9fKpQSG3jvu2tR5CSFeaqTYjwHUg858LU4ERVCQj_jv3iFMMo6ggbtsKV1MLbtEuNW-IWrdEpqoVfXjNBQtTGMVm095WH6PiuQbL_ZOyIDhaXSvvuCjr44t9YrT5Mh6AHEOQTMPghzR24ulDAv1WGJb4JZfQTaH4yA_HCOkRaXQ1YU3tS0WAjmV1awXTiUW-2RZ_tN1x-C631XalzZ5fxkdvYgl-xTL_9Wgzfu7cHu-k17iDDSFR3xIezoKXScy2GJXekS2WHdGw
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] ---> END HTTP (0-byte body)
[2022-11-19 19:45:31 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.netflix.config.ChainedDynamicProperty : Flipping property: bookstore-payment-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2022-11-19 19:45:31 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.netflix.util.concurrent.ShutdownEnabledTimer : Shutdown hook installed for: NFLoadBalancer-PingTimer-bookstore-payment-service
[2022-11-19 19:45:31 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.netflix.loadbalancer.BaseLoadBalancer : Client: bookstore-payment-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=bookstore-payment-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2022-11-19 19:45:31 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.netflix.loadbalancer.DynamicServerListLoadBalancer : Using serverListUpdater PollingServerListUpdater
[2022-11-19 19:45:31 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.netflix.config.ChainedDynamicProperty : Flipping property: bookstore-payment-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2022-11-19 19:45:31 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.netflix.loadbalancer.DynamicServerListLoadBalancer : DynamicServerListLoadBalancer for client bookstore-payment-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=bookstore-payment-service,current list of Servers=[192.168.1.10:8001],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.10:8001;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 ICT 1970;	First connection made: Thu Jan 01 08:00:00 ICT 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@519b4035
[2022-11-19 19:45:31 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> org.springframework.data.repository.config.DeferredRepositoryInitializationListener : Triggering deferred initialization of Spring Data repositories…
[2022-11-19 19:45:31 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> org.springframework.data.repository.config.DeferredRepositoryInitializationListener : Spring Data repositories initialized!
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] <--- HTTP/1.1 200 (545ms)
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] access-control-allow-headers: *
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] access-control-allow-methods: *
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] access-control-allow-origin: *
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] cache-control: no-cache, no-store, max-age=0, must-revalidate
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] connection: keep-alive
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] content-type: application/json
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] date: Sat, 19 Nov 2022 12:45:31 GMT
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] expires: 0
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] keep-alive: timeout=60
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] pragma: no-cache
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] transfer-encoding: chunked
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] vary: Access-Control-Request-Headers
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] vary: Access-Control-Request-Method
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] vary: Origin
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] x-content-type-options: nosniff
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] x-xss-protection: 1; mode=block
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] 
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] {"paymentMethodId":"pm_1M5qQEG9R9y827nt0gZwbDEN","cardType":"visa","cardLast4Digits":"1111","cardExpirationMonth":10,"cardExpirationYear":2023,"cardCountry":"US"}
[2022-11-19 19:45:31 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 0e85393117cbc217], [SpanId -> 17a5a184d34b6b19] 
      <http-nio-7001-exec-7> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] <--- END HTTP (162-byte body)
[2022-11-19 19:45:32 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <PollingServerListUpdater-1> com.netflix.config.ChainedDynamicProperty : Flipping property: bookstore-billing-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2022-11-19 19:45:32 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <PollingServerListUpdater-0> com.netflix.config.ChainedDynamicProperty : Flipping property: bookstore-payment-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] ---> GET http://bookstore-billing-service/address/933a8f2b-53e2-478f-922b-e84a3a47bb46 HTTP/1.1
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsid2ViIl0sInVzZXJfaWQiOiI0MDgzZjFlZS1hODA2LTQ1YmYtYmU0OC1hMjM1OTAwNThkNzIiLCJ1c2VyX25hbWUiOiJwaGFtZGF0Iiwic2NvcGUiOlsicmVhZCIsIndyaXRlIl0sImV4cCI6MTY2OTEyMDk1MywiYXV0aG9yaXRpZXMiOlsiU1RBTkRBUkRfVVNFUiJdLCJqdGkiOiJiZDY5MzJlMy03NTM4LTQ4OTItYjVkOS1jNDY3YWY5ZDJmNTUiLCJjbGllbnRfaWQiOiI5M2VkNDUzZS1iN2FjLTQxOTItYTZkNC1jNDVmYWUwZDk5YWMifQ.EKJ2pndsLn3UjK1LvCWSrn1Z9Vf3W_3A47u2qGRVPrvkAOU_oGLJ01MJNTKRWh6JEgV1-VxbvY9fKpQSG3jvu2tR5CSFeaqTYjwHUg858LU4ERVCQj_jv3iFMMo6ggbtsKV1MLbtEuNW-IWrdEpqoVfXjNBQtTGMVm095WH6PiuQbL_ZOyIDhaXSvvuCjr44t9YrT5Mh6AHEOQTMPghzR24ulDAv1WGJb4JZfQTaH4yA_HCOkRaXQ1YU3tS0WAjmV1awXTiUW-2RZ_tN1x-C631XalzZ5fxkdvYgl-xTL_9Wgzfu7cHu-k17iDDSFR3xIezoKXScy2GJXekS2WHdGw
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] ---> END HTTP (0-byte body)
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] <--- HTTP/1.1 200 (23ms)
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] access-control-allow-headers: *
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] access-control-allow-methods: *
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] access-control-allow-origin: *
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] cache-control: no-cache, no-store, max-age=0, must-revalidate
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] connection: keep-alive
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] content-type: application/json
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] date: Sat, 19 Nov 2022 12:45:37 GMT
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] expires: 0
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] keep-alive: timeout=60
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] pragma: no-cache
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] transfer-encoding: chunked
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] vary: Access-Control-Request-Headers
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] vary: Access-Control-Request-Method
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] vary: Origin
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] x-content-type-options: nosniff
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] x-xss-protection: 1; mode=block
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] 
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] {"addressId":"933a8f2b-53e2-478f-922b-e84a3a47bb46","userId":"4083f1ee-a806-45bf-be48-a23590058d72","addressLine1":"123 Nguyễn Văn Bảo","addressLine2":"","city":"Hồ Chí Minh","state":"Gò Vấp","postalCode":"8000000","country":"VN","phone":"0339686430"}
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] <--- END HTTP (262-byte body)
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] ---> GET http://bookstore-billing-service/address/933a8f2b-53e2-478f-922b-e84a3a47bb46 HTTP/1.1
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsid2ViIl0sInVzZXJfaWQiOiI0MDgzZjFlZS1hODA2LTQ1YmYtYmU0OC1hMjM1OTAwNThkNzIiLCJ1c2VyX25hbWUiOiJwaGFtZGF0Iiwic2NvcGUiOlsicmVhZCIsIndyaXRlIl0sImV4cCI6MTY2OTEyMDk1MywiYXV0aG9yaXRpZXMiOlsiU1RBTkRBUkRfVVNFUiJdLCJqdGkiOiJiZDY5MzJlMy03NTM4LTQ4OTItYjVkOS1jNDY3YWY5ZDJmNTUiLCJjbGllbnRfaWQiOiI5M2VkNDUzZS1iN2FjLTQxOTItYTZkNC1jNDVmYWUwZDk5YWMifQ.EKJ2pndsLn3UjK1LvCWSrn1Z9Vf3W_3A47u2qGRVPrvkAOU_oGLJ01MJNTKRWh6JEgV1-VxbvY9fKpQSG3jvu2tR5CSFeaqTYjwHUg858LU4ERVCQj_jv3iFMMo6ggbtsKV1MLbtEuNW-IWrdEpqoVfXjNBQtTGMVm095WH6PiuQbL_ZOyIDhaXSvvuCjr44t9YrT5Mh6AHEOQTMPghzR24ulDAv1WGJb4JZfQTaH4yA_HCOkRaXQ1YU3tS0WAjmV1awXTiUW-2RZ_tN1x-C631XalzZ5fxkdvYgl-xTL_9Wgzfu7cHu-k17iDDSFR3xIezoKXScy2GJXekS2WHdGw
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] ---> END HTTP (0-byte body)
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] <--- HTTP/1.1 200 (21ms)
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] access-control-allow-headers: *
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] access-control-allow-methods: *
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] access-control-allow-origin: *
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] cache-control: no-cache, no-store, max-age=0, must-revalidate
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] connection: keep-alive
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] content-type: application/json
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] date: Sat, 19 Nov 2022 12:45:37 GMT
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] expires: 0
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] keep-alive: timeout=60
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] pragma: no-cache
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] transfer-encoding: chunked
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] vary: Access-Control-Request-Headers
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] vary: Access-Control-Request-Method
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] vary: Origin
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] x-content-type-options: nosniff
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] x-xss-protection: 1; mode=block
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] 
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] {"addressId":"933a8f2b-53e2-478f-922b-e84a3a47bb46","userId":"4083f1ee-a806-45bf-be48-a23590058d72","addressLine1":"123 Nguyễn Văn Bảo","addressLine2":"","city":"Hồ Chí Minh","state":"Gò Vấp","postalCode":"8000000","country":"VN","phone":"0339686430"}
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] <--- END HTTP (262-byte body)
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] ---> GET http://bookstore-payment-service/paymentMethod/pm_1M5qQEG9R9y827nt0gZwbDEN HTTP/1.1
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsid2ViIl0sInVzZXJfaWQiOiI0MDgzZjFlZS1hODA2LTQ1YmYtYmU0OC1hMjM1OTAwNThkNzIiLCJ1c2VyX25hbWUiOiJwaGFtZGF0Iiwic2NvcGUiOlsicmVhZCIsIndyaXRlIl0sImV4cCI6MTY2OTEyMDk1MywiYXV0aG9yaXRpZXMiOlsiU1RBTkRBUkRfVVNFUiJdLCJqdGkiOiJiZDY5MzJlMy03NTM4LTQ4OTItYjVkOS1jNDY3YWY5ZDJmNTUiLCJjbGllbnRfaWQiOiI5M2VkNDUzZS1iN2FjLTQxOTItYTZkNC1jNDVmYWUwZDk5YWMifQ.EKJ2pndsLn3UjK1LvCWSrn1Z9Vf3W_3A47u2qGRVPrvkAOU_oGLJ01MJNTKRWh6JEgV1-VxbvY9fKpQSG3jvu2tR5CSFeaqTYjwHUg858LU4ERVCQj_jv3iFMMo6ggbtsKV1MLbtEuNW-IWrdEpqoVfXjNBQtTGMVm095WH6PiuQbL_ZOyIDhaXSvvuCjr44t9YrT5Mh6AHEOQTMPghzR24ulDAv1WGJb4JZfQTaH4yA_HCOkRaXQ1YU3tS0WAjmV1awXTiUW-2RZ_tN1x-C631XalzZ5fxkdvYgl-xTL_9Wgzfu7cHu-k17iDDSFR3xIezoKXScy2GJXekS2WHdGw
[2022-11-19 19:45:37 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] ---> END HTTP (0-byte body)
[2022-11-19 19:45:38 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] <--- HTTP/1.1 200 (650ms)
[2022-11-19 19:45:38 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] access-control-allow-headers: *
[2022-11-19 19:45:38 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] access-control-allow-methods: *
[2022-11-19 19:45:38 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] access-control-allow-origin: *
[2022-11-19 19:45:38 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] cache-control: no-cache, no-store, max-age=0, must-revalidate
[2022-11-19 19:45:38 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] connection: keep-alive
[2022-11-19 19:45:38 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] content-type: application/json
[2022-11-19 19:45:38 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] date: Sat, 19 Nov 2022 12:45:38 GMT
[2022-11-19 19:45:38 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] expires: 0
[2022-11-19 19:45:38 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] keep-alive: timeout=60
[2022-11-19 19:45:38 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] pragma: no-cache
[2022-11-19 19:45:38 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] transfer-encoding: chunked
[2022-11-19 19:45:38 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] vary: Access-Control-Request-Headers
[2022-11-19 19:45:38 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] vary: Access-Control-Request-Method
[2022-11-19 19:45:38 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] vary: Origin
[2022-11-19 19:45:38 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] x-content-type-options: nosniff
[2022-11-19 19:45:38 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] x-xss-protection: 1; mode=block
[2022-11-19 19:45:38 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] 
[2022-11-19 19:45:38 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] {"paymentMethodId":"pm_1M5qQEG9R9y827nt0gZwbDEN","cardType":"visa","cardLast4Digits":"1111","cardExpirationMonth":10,"cardExpirationYear":2023,"cardCountry":"US"}
[2022-11-19 19:45:38 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 362509b1e270347a], [SpanId -> 44f7c04386275820] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] <--- END HTTP (162-byte body)
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] ---> GET http://bookstore-billing-service/address/933a8f2b-53e2-478f-922b-e84a3a47bb46 HTTP/1.1
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsid2ViIl0sInVzZXJfaWQiOiI0MDgzZjFlZS1hODA2LTQ1YmYtYmU0OC1hMjM1OTAwNThkNzIiLCJ1c2VyX25hbWUiOiJwaGFtZGF0Iiwic2NvcGUiOlsicmVhZCIsIndyaXRlIl0sImV4cCI6MTY2OTEyMDk1MywiYXV0aG9yaXRpZXMiOlsiU1RBTkRBUkRfVVNFUiJdLCJqdGkiOiJiZDY5MzJlMy03NTM4LTQ4OTItYjVkOS1jNDY3YWY5ZDJmNTUiLCJjbGllbnRfaWQiOiI5M2VkNDUzZS1iN2FjLTQxOTItYTZkNC1jNDVmYWUwZDk5YWMifQ.EKJ2pndsLn3UjK1LvCWSrn1Z9Vf3W_3A47u2qGRVPrvkAOU_oGLJ01MJNTKRWh6JEgV1-VxbvY9fKpQSG3jvu2tR5CSFeaqTYjwHUg858LU4ERVCQj_jv3iFMMo6ggbtsKV1MLbtEuNW-IWrdEpqoVfXjNBQtTGMVm095WH6PiuQbL_ZOyIDhaXSvvuCjr44t9YrT5Mh6AHEOQTMPghzR24ulDAv1WGJb4JZfQTaH4yA_HCOkRaXQ1YU3tS0WAjmV1awXTiUW-2RZ_tN1x-C631XalzZ5fxkdvYgl-xTL_9Wgzfu7cHu-k17iDDSFR3xIezoKXScy2GJXekS2WHdGw
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] ---> END HTTP (0-byte body)
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] <--- HTTP/1.1 200 (18ms)
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] access-control-allow-headers: *
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] access-control-allow-methods: *
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] access-control-allow-origin: *
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] cache-control: no-cache, no-store, max-age=0, must-revalidate
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] connection: keep-alive
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] content-type: application/json
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] date: Sat, 19 Nov 2022 12:45:41 GMT
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] expires: 0
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] keep-alive: timeout=60
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] pragma: no-cache
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] transfer-encoding: chunked
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] vary: Access-Control-Request-Headers
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] vary: Access-Control-Request-Method
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] vary: Origin
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] x-content-type-options: nosniff
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] x-xss-protection: 1; mode=block
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] 
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] {"addressId":"933a8f2b-53e2-478f-922b-e84a3a47bb46","userId":"4083f1ee-a806-45bf-be48-a23590058d72","addressLine1":"123 Nguyễn Văn Bảo","addressLine2":"","city":"Hồ Chí Minh","state":"Gò Vấp","postalCode":"8000000","country":"VN","phone":"0339686430"}
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] <--- END HTTP (262-byte body)
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] ---> GET http://bookstore-billing-service/address/933a8f2b-53e2-478f-922b-e84a3a47bb46 HTTP/1.1
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsid2ViIl0sInVzZXJfaWQiOiI0MDgzZjFlZS1hODA2LTQ1YmYtYmU0OC1hMjM1OTAwNThkNzIiLCJ1c2VyX25hbWUiOiJwaGFtZGF0Iiwic2NvcGUiOlsicmVhZCIsIndyaXRlIl0sImV4cCI6MTY2OTEyMDk1MywiYXV0aG9yaXRpZXMiOlsiU1RBTkRBUkRfVVNFUiJdLCJqdGkiOiJiZDY5MzJlMy03NTM4LTQ4OTItYjVkOS1jNDY3YWY5ZDJmNTUiLCJjbGllbnRfaWQiOiI5M2VkNDUzZS1iN2FjLTQxOTItYTZkNC1jNDVmYWUwZDk5YWMifQ.EKJ2pndsLn3UjK1LvCWSrn1Z9Vf3W_3A47u2qGRVPrvkAOU_oGLJ01MJNTKRWh6JEgV1-VxbvY9fKpQSG3jvu2tR5CSFeaqTYjwHUg858LU4ERVCQj_jv3iFMMo6ggbtsKV1MLbtEuNW-IWrdEpqoVfXjNBQtTGMVm095WH6PiuQbL_ZOyIDhaXSvvuCjr44t9YrT5Mh6AHEOQTMPghzR24ulDAv1WGJb4JZfQTaH4yA_HCOkRaXQ1YU3tS0WAjmV1awXTiUW-2RZ_tN1x-C631XalzZ5fxkdvYgl-xTL_9Wgzfu7cHu-k17iDDSFR3xIezoKXScy2GJXekS2WHdGw
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] ---> END HTTP (0-byte body)
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] <--- HTTP/1.1 200 (27ms)
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] access-control-allow-headers: *
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] access-control-allow-methods: *
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] access-control-allow-origin: *
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] cache-control: no-cache, no-store, max-age=0, must-revalidate
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] connection: keep-alive
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] content-type: application/json
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] date: Sat, 19 Nov 2022 12:45:41 GMT
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] expires: 0
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] keep-alive: timeout=60
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] pragma: no-cache
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] transfer-encoding: chunked
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] vary: Access-Control-Request-Headers
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] vary: Access-Control-Request-Method
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] vary: Origin
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] x-content-type-options: nosniff
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] x-xss-protection: 1; mode=block
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] 
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] {"addressId":"933a8f2b-53e2-478f-922b-e84a3a47bb46","userId":"4083f1ee-a806-45bf-be48-a23590058d72","addressLine1":"123 Nguyễn Văn Bảo","addressLine2":"","city":"Hồ Chí Minh","state":"Gò Vấp","postalCode":"8000000","country":"VN","phone":"0339686430"}
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] <--- END HTTP (262-byte body)
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#doPayment] ---> POST http://bookstore-payment-service/pay HTTP/1.1
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#doPayment] Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsid2ViIl0sInVzZXJfaWQiOiI0MDgzZjFlZS1hODA2LTQ1YmYtYmU0OC1hMjM1OTAwNThkNzIiLCJ1c2VyX25hbWUiOiJwaGFtZGF0Iiwic2NvcGUiOlsicmVhZCIsIndyaXRlIl0sImV4cCI6MTY2OTEyMDk1MywiYXV0aG9yaXRpZXMiOlsiU1RBTkRBUkRfVVNFUiJdLCJqdGkiOiJiZDY5MzJlMy03NTM4LTQ4OTItYjVkOS1jNDY3YWY5ZDJmNTUiLCJjbGllbnRfaWQiOiI5M2VkNDUzZS1iN2FjLTQxOTItYTZkNC1jNDVmYWUwZDk5YWMifQ.EKJ2pndsLn3UjK1LvCWSrn1Z9Vf3W_3A47u2qGRVPrvkAOU_oGLJ01MJNTKRWh6JEgV1-VxbvY9fKpQSG3jvu2tR5CSFeaqTYjwHUg858LU4ERVCQj_jv3iFMMo6ggbtsKV1MLbtEuNW-IWrdEpqoVfXjNBQtTGMVm095WH6PiuQbL_ZOyIDhaXSvvuCjr44t9YrT5Mh6AHEOQTMPghzR24ulDAv1WGJb4JZfQTaH4yA_HCOkRaXQ1YU3tS0WAjmV1awXTiUW-2RZ_tN1x-C631XalzZ5fxkdvYgl-xTL_9Wgzfu7cHu-k17iDDSFR3xIezoKXScy2GJXekS2WHdGw
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#doPayment] Content-Length: 81
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#doPayment] Content-Type: application/json
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#doPayment] 
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#doPayment] {"amount":10300,"currency":"USD","paymentMethodId":"pm_1M5qQEG9R9y827nt0gZwbDEN"}
[2022-11-19 19:45:41 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#doPayment] ---> END HTTP (81-byte body)
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#doPayment] <--- HTTP/1.1 201 (2161ms)
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#doPayment] access-control-allow-headers: *
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#doPayment] access-control-allow-methods: *
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#doPayment] access-control-allow-origin: *
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#doPayment] cache-control: no-cache, no-store, max-age=0, must-revalidate
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#doPayment] connection: keep-alive
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#doPayment] content-type: application/json
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#doPayment] date: Sat, 19 Nov 2022 12:45:43 GMT
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#doPayment] expires: 0
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#doPayment] keep-alive: timeout=60
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#doPayment] pragma: no-cache
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#doPayment] transfer-encoding: chunked
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#doPayment] vary: Access-Control-Request-Headers
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#doPayment] vary: Access-Control-Request-Method
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#doPayment] vary: Origin
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#doPayment] x-content-type-options: nosniff
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#doPayment] x-xss-protection: 1; mode=block
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#doPayment] 
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#doPayment] {"paymentId":"ch_3M5qQTG9R9y827nt02AKSYhS","paymentDate":"1970-01-20T15:34:21.942","captured":true,"receipt_url":"https://pay.stripe.com/receipts/payment/CAcaFwoVYWNjdF8xSHlHeDZHOVI5eTgyN250KPef45sGMgaLz6rDE_A6LBblV6CrWKqPu-MH1oZSqMPEWHT620f5hoYbUm70ooNDRUwdSRp_dNFhEr2a"}
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 606f858f8d47800e], [SpanId -> 0ccd9abcc26c0680] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#doPayment] <--- END HTTP (272-byte body)
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] ---> GET http://bookstore-billing-service/address/933a8f2b-53e2-478f-922b-e84a3a47bb46 HTTP/1.1
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsid2ViIl0sInVzZXJfaWQiOiI0MDgzZjFlZS1hODA2LTQ1YmYtYmU0OC1hMjM1OTAwNThkNzIiLCJ1c2VyX25hbWUiOiJwaGFtZGF0Iiwic2NvcGUiOlsicmVhZCIsIndyaXRlIl0sImV4cCI6MTY2OTEyMDk1MywiYXV0aG9yaXRpZXMiOlsiU1RBTkRBUkRfVVNFUiJdLCJqdGkiOiJiZDY5MzJlMy03NTM4LTQ4OTItYjVkOS1jNDY3YWY5ZDJmNTUiLCJjbGllbnRfaWQiOiI5M2VkNDUzZS1iN2FjLTQxOTItYTZkNC1jNDVmYWUwZDk5YWMifQ.EKJ2pndsLn3UjK1LvCWSrn1Z9Vf3W_3A47u2qGRVPrvkAOU_oGLJ01MJNTKRWh6JEgV1-VxbvY9fKpQSG3jvu2tR5CSFeaqTYjwHUg858LU4ERVCQj_jv3iFMMo6ggbtsKV1MLbtEuNW-IWrdEpqoVfXjNBQtTGMVm095WH6PiuQbL_ZOyIDhaXSvvuCjr44t9YrT5Mh6AHEOQTMPghzR24ulDAv1WGJb4JZfQTaH4yA_HCOkRaXQ1YU3tS0WAjmV1awXTiUW-2RZ_tN1x-C631XalzZ5fxkdvYgl-xTL_9Wgzfu7cHu-k17iDDSFR3xIezoKXScy2GJXekS2WHdGw
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] ---> END HTTP (0-byte body)
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b4ad1961b8b7b66a], [SpanId -> c2776a3b072fd845] 
      <http-nio-7001-exec-5> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] ---> GET http://bookstore-payment-service/paymentMethod/pm_1M5qQEG9R9y827nt0gZwbDEN HTTP/1.1
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b4ad1961b8b7b66a], [SpanId -> c2776a3b072fd845] 
      <http-nio-7001-exec-5> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsid2ViIl0sInVzZXJfaWQiOiI0MDgzZjFlZS1hODA2LTQ1YmYtYmU0OC1hMjM1OTAwNThkNzIiLCJ1c2VyX25hbWUiOiJwaGFtZGF0Iiwic2NvcGUiOlsicmVhZCIsIndyaXRlIl0sImV4cCI6MTY2OTEyMDk1MywiYXV0aG9yaXRpZXMiOlsiU1RBTkRBUkRfVVNFUiJdLCJqdGkiOiJiZDY5MzJlMy03NTM4LTQ4OTItYjVkOS1jNDY3YWY5ZDJmNTUiLCJjbGllbnRfaWQiOiI5M2VkNDUzZS1iN2FjLTQxOTItYTZkNC1jNDVmYWUwZDk5YWMifQ.EKJ2pndsLn3UjK1LvCWSrn1Z9Vf3W_3A47u2qGRVPrvkAOU_oGLJ01MJNTKRWh6JEgV1-VxbvY9fKpQSG3jvu2tR5CSFeaqTYjwHUg858LU4ERVCQj_jv3iFMMo6ggbtsKV1MLbtEuNW-IWrdEpqoVfXjNBQtTGMVm095WH6PiuQbL_ZOyIDhaXSvvuCjr44t9YrT5Mh6AHEOQTMPghzR24ulDAv1WGJb4JZfQTaH4yA_HCOkRaXQ1YU3tS0WAjmV1awXTiUW-2RZ_tN1x-C631XalzZ5fxkdvYgl-xTL_9Wgzfu7cHu-k17iDDSFR3xIezoKXScy2GJXekS2WHdGw
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b4ad1961b8b7b66a], [SpanId -> c2776a3b072fd845] 
      <http-nio-7001-exec-5> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] ---> END HTTP (0-byte body)
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] <--- HTTP/1.1 200 (65ms)
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] access-control-allow-headers: *
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] access-control-allow-methods: *
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] access-control-allow-origin: *
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] cache-control: no-cache, no-store, max-age=0, must-revalidate
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] connection: keep-alive
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] content-type: application/json
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] date: Sat, 19 Nov 2022 12:45:43 GMT
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] expires: 0
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] keep-alive: timeout=60
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] pragma: no-cache
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] transfer-encoding: chunked
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] vary: Access-Control-Request-Headers
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] vary: Access-Control-Request-Method
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] vary: Origin
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] x-content-type-options: nosniff
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] x-xss-protection: 1; mode=block
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] 
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] {"addressId":"933a8f2b-53e2-478f-922b-e84a3a47bb46","userId":"4083f1ee-a806-45bf-be48-a23590058d72","addressLine1":"123 Nguyễn Văn Bảo","addressLine2":"","city":"Hồ Chí Minh","state":"Gò Vấp","postalCode":"8000000","country":"VN","phone":"0339686430"}
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] <--- END HTTP (262-byte body)
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] ---> GET http://bookstore-billing-service/address/933a8f2b-53e2-478f-922b-e84a3a47bb46 HTTP/1.1
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsid2ViIl0sInVzZXJfaWQiOiI0MDgzZjFlZS1hODA2LTQ1YmYtYmU0OC1hMjM1OTAwNThkNzIiLCJ1c2VyX25hbWUiOiJwaGFtZGF0Iiwic2NvcGUiOlsicmVhZCIsIndyaXRlIl0sImV4cCI6MTY2OTEyMDk1MywiYXV0aG9yaXRpZXMiOlsiU1RBTkRBUkRfVVNFUiJdLCJqdGkiOiJiZDY5MzJlMy03NTM4LTQ4OTItYjVkOS1jNDY3YWY5ZDJmNTUiLCJjbGllbnRfaWQiOiI5M2VkNDUzZS1iN2FjLTQxOTItYTZkNC1jNDVmYWUwZDk5YWMifQ.EKJ2pndsLn3UjK1LvCWSrn1Z9Vf3W_3A47u2qGRVPrvkAOU_oGLJ01MJNTKRWh6JEgV1-VxbvY9fKpQSG3jvu2tR5CSFeaqTYjwHUg858LU4ERVCQj_jv3iFMMo6ggbtsKV1MLbtEuNW-IWrdEpqoVfXjNBQtTGMVm095WH6PiuQbL_ZOyIDhaXSvvuCjr44t9YrT5Mh6AHEOQTMPghzR24ulDAv1WGJb4JZfQTaH4yA_HCOkRaXQ1YU3tS0WAjmV1awXTiUW-2RZ_tN1x-C631XalzZ5fxkdvYgl-xTL_9Wgzfu7cHu-k17iDDSFR3xIezoKXScy2GJXekS2WHdGw
[2022-11-19 19:45:43 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] ---> END HTTP (0-byte body)
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] <--- HTTP/1.1 200 (64ms)
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] access-control-allow-headers: *
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] access-control-allow-methods: *
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] access-control-allow-origin: *
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] cache-control: no-cache, no-store, max-age=0, must-revalidate
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] connection: keep-alive
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] content-type: application/json
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] date: Sat, 19 Nov 2022 12:45:43 GMT
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] expires: 0
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] keep-alive: timeout=60
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] pragma: no-cache
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] transfer-encoding: chunked
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] vary: Access-Control-Request-Headers
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] vary: Access-Control-Request-Method
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] vary: Origin
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] x-content-type-options: nosniff
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] x-xss-protection: 1; mode=block
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] 
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] {"addressId":"933a8f2b-53e2-478f-922b-e84a3a47bb46","userId":"4083f1ee-a806-45bf-be48-a23590058d72","addressLine1":"123 Nguyễn Văn Bảo","addressLine2":"","city":"Hồ Chí Minh","state":"Gò Vấp","postalCode":"8000000","country":"VN","phone":"0339686430"}
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.BillingFeignClient : [BillingFeignClient#getAddressById] <--- END HTTP (262-byte body)
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] ---> GET http://bookstore-payment-service/paymentMethod/pm_1M5qQEG9R9y827nt0gZwbDEN HTTP/1.1
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsid2ViIl0sInVzZXJfaWQiOiI0MDgzZjFlZS1hODA2LTQ1YmYtYmU0OC1hMjM1OTAwNThkNzIiLCJ1c2VyX25hbWUiOiJwaGFtZGF0Iiwic2NvcGUiOlsicmVhZCIsIndyaXRlIl0sImV4cCI6MTY2OTEyMDk1MywiYXV0aG9yaXRpZXMiOlsiU1RBTkRBUkRfVVNFUiJdLCJqdGkiOiJiZDY5MzJlMy03NTM4LTQ4OTItYjVkOS1jNDY3YWY5ZDJmNTUiLCJjbGllbnRfaWQiOiI5M2VkNDUzZS1iN2FjLTQxOTItYTZkNC1jNDVmYWUwZDk5YWMifQ.EKJ2pndsLn3UjK1LvCWSrn1Z9Vf3W_3A47u2qGRVPrvkAOU_oGLJ01MJNTKRWh6JEgV1-VxbvY9fKpQSG3jvu2tR5CSFeaqTYjwHUg858LU4ERVCQj_jv3iFMMo6ggbtsKV1MLbtEuNW-IWrdEpqoVfXjNBQtTGMVm095WH6PiuQbL_ZOyIDhaXSvvuCjr44t9YrT5Mh6AHEOQTMPghzR24ulDAv1WGJb4JZfQTaH4yA_HCOkRaXQ1YU3tS0WAjmV1awXTiUW-2RZ_tN1x-C631XalzZ5fxkdvYgl-xTL_9Wgzfu7cHu-k17iDDSFR3xIezoKXScy2GJXekS2WHdGw
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] ---> END HTTP (0-byte body)
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b4ad1961b8b7b66a], [SpanId -> c2776a3b072fd845] 
      <http-nio-7001-exec-5> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] <--- HTTP/1.1 200 (402ms)
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b4ad1961b8b7b66a], [SpanId -> c2776a3b072fd845] 
      <http-nio-7001-exec-5> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] access-control-allow-headers: *
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b4ad1961b8b7b66a], [SpanId -> c2776a3b072fd845] 
      <http-nio-7001-exec-5> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] access-control-allow-methods: *
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b4ad1961b8b7b66a], [SpanId -> c2776a3b072fd845] 
      <http-nio-7001-exec-5> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] access-control-allow-origin: *
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b4ad1961b8b7b66a], [SpanId -> c2776a3b072fd845] 
      <http-nio-7001-exec-5> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] cache-control: no-cache, no-store, max-age=0, must-revalidate
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b4ad1961b8b7b66a], [SpanId -> c2776a3b072fd845] 
      <http-nio-7001-exec-5> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] connection: keep-alive
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b4ad1961b8b7b66a], [SpanId -> c2776a3b072fd845] 
      <http-nio-7001-exec-5> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] content-type: application/json
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b4ad1961b8b7b66a], [SpanId -> c2776a3b072fd845] 
      <http-nio-7001-exec-5> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] date: Sat, 19 Nov 2022 12:45:43 GMT
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b4ad1961b8b7b66a], [SpanId -> c2776a3b072fd845] 
      <http-nio-7001-exec-5> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] expires: 0
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b4ad1961b8b7b66a], [SpanId -> c2776a3b072fd845] 
      <http-nio-7001-exec-5> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] keep-alive: timeout=60
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b4ad1961b8b7b66a], [SpanId -> c2776a3b072fd845] 
      <http-nio-7001-exec-5> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] pragma: no-cache
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b4ad1961b8b7b66a], [SpanId -> c2776a3b072fd845] 
      <http-nio-7001-exec-5> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] transfer-encoding: chunked
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b4ad1961b8b7b66a], [SpanId -> c2776a3b072fd845] 
      <http-nio-7001-exec-5> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] vary: Access-Control-Request-Headers
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b4ad1961b8b7b66a], [SpanId -> c2776a3b072fd845] 
      <http-nio-7001-exec-5> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] vary: Access-Control-Request-Method
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b4ad1961b8b7b66a], [SpanId -> c2776a3b072fd845] 
      <http-nio-7001-exec-5> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] vary: Origin
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b4ad1961b8b7b66a], [SpanId -> c2776a3b072fd845] 
      <http-nio-7001-exec-5> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] x-content-type-options: nosniff
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b4ad1961b8b7b66a], [SpanId -> c2776a3b072fd845] 
      <http-nio-7001-exec-5> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] x-xss-protection: 1; mode=block
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b4ad1961b8b7b66a], [SpanId -> c2776a3b072fd845] 
      <http-nio-7001-exec-5> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] 
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b4ad1961b8b7b66a], [SpanId -> c2776a3b072fd845] 
      <http-nio-7001-exec-5> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] {"paymentMethodId":"pm_1M5qQEG9R9y827nt0gZwbDEN","cardType":"visa","cardLast4Digits":"1111","cardExpirationMonth":10,"cardExpirationYear":2023,"cardCountry":"US"}
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b4ad1961b8b7b66a], [SpanId -> c2776a3b072fd845] 
      <http-nio-7001-exec-5> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] <--- END HTTP (162-byte body)
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] <--- HTTP/1.1 200 (562ms)
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] access-control-allow-headers: *
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] access-control-allow-methods: *
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] access-control-allow-origin: *
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] cache-control: no-cache, no-store, max-age=0, must-revalidate
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] connection: keep-alive
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] content-type: application/json
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] date: Sat, 19 Nov 2022 12:45:44 GMT
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] expires: 0
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] keep-alive: timeout=60
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] pragma: no-cache
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] transfer-encoding: chunked
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] vary: Access-Control-Request-Headers
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] vary: Access-Control-Request-Method
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] vary: Origin
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] x-content-type-options: nosniff
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] x-xss-protection: 1; mode=block
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] 
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] {"paymentMethodId":"pm_1M5qQEG9R9y827nt0gZwbDEN","cardType":"visa","cardLast4Digits":"1111","cardExpirationMonth":10,"cardExpirationYear":2023,"cardCountry":"US"}
[2022-11-19 19:45:44 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d1f2dcf734198a7f], [SpanId -> f2d606780e281d78] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] <--- END HTTP (162-byte body)
[2022-11-19 19:47:12 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d3ff5971b2854189], [SpanId -> 6d9c0a0adc6a11cc] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] ---> GET http://bookstore-payment-service/paymentMethod/pm_1M5qQEG9R9y827nt0gZwbDEN HTTP/1.1
[2022-11-19 19:47:12 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d3ff5971b2854189], [SpanId -> 6d9c0a0adc6a11cc] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsid2ViIl0sInVzZXJfaWQiOiJ4Y3ZjdmJ2di1iYTVkLTRiOTItODViZS1kZmdkZmdkZmdkZmciLCJ1c2VyX25hbWUiOiJhZG1pbi5hZG1pbiIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSJdLCJleHAiOjE2NjkxMjEyMTksImF1dGhvcml0aWVzIjpbIlNUQU5EQVJEX1VTRVIiLCJBRE1JTl9VU0VSIl0sImp0aSI6IjFmYjk0NTQzLWI3ODQtNDVjNy1hMGYzLTVmMDA4MDQ4NDMwZSIsImNsaWVudF9pZCI6IjkzZWQ0NTNlLWI3YWMtNDE5Mi1hNmQ0LWM0NWZhZTBkOTlhYyJ9.jyhZN7Rxfv23bXX367bgacrr1I3ANBTKirLVRF6ZlTP4wSsWmXjm8vDGhN0_GimlAwlb5YfQbSmTTxBdzbNtI5X66nimJ-rELb2TX91EdPDIlXvENsk8R4OummPxw-9H4LsTrIc7wsVkXkR5NjaTTc06Oks6eOFzB5Rt5wxuHtW7uokqkpj85WyyASmpOlXrfwiOib3fykvGU8kml79m3X0No1PXkvRcoxS_E2aOYEAGjJNqLiaqeCG8NBBvmWyUekXOsE0yd9FsM6cOFc5jLpJ6Zmv9z-i4-000RBGrPHSl7KTR0cdv6987dn1u5QPlJwrzEFH-4x9sy6To5uzz2A
[2022-11-19 19:47:12 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d3ff5971b2854189], [SpanId -> 6d9c0a0adc6a11cc] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] ---> END HTTP (0-byte body)
[2022-11-19 19:47:13 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d3ff5971b2854189], [SpanId -> 6d9c0a0adc6a11cc] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] <--- HTTP/1.1 500 (729ms)
[2022-11-19 19:47:13 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d3ff5971b2854189], [SpanId -> 6d9c0a0adc6a11cc] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] access-control-allow-headers: *
[2022-11-19 19:47:13 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d3ff5971b2854189], [SpanId -> 6d9c0a0adc6a11cc] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] access-control-allow-methods: *
[2022-11-19 19:47:13 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d3ff5971b2854189], [SpanId -> 6d9c0a0adc6a11cc] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] access-control-allow-origin: *
[2022-11-19 19:47:13 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d3ff5971b2854189], [SpanId -> 6d9c0a0adc6a11cc] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] cache-control: no-cache, no-store, max-age=0, must-revalidate
[2022-11-19 19:47:13 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d3ff5971b2854189], [SpanId -> 6d9c0a0adc6a11cc] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] connection: close
[2022-11-19 19:47:13 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d3ff5971b2854189], [SpanId -> 6d9c0a0adc6a11cc] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] content-type: application/json
[2022-11-19 19:47:13 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d3ff5971b2854189], [SpanId -> 6d9c0a0adc6a11cc] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] date: Sat, 19 Nov 2022 12:47:13 GMT
[2022-11-19 19:47:13 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d3ff5971b2854189], [SpanId -> 6d9c0a0adc6a11cc] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] expires: 0
[2022-11-19 19:47:13 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d3ff5971b2854189], [SpanId -> 6d9c0a0adc6a11cc] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] pragma: no-cache
[2022-11-19 19:47:13 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d3ff5971b2854189], [SpanId -> 6d9c0a0adc6a11cc] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] transfer-encoding: chunked
[2022-11-19 19:47:13 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d3ff5971b2854189], [SpanId -> 6d9c0a0adc6a11cc] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] vary: Access-Control-Request-Headers
[2022-11-19 19:47:13 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d3ff5971b2854189], [SpanId -> 6d9c0a0adc6a11cc] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] vary: Access-Control-Request-Method
[2022-11-19 19:47:13 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d3ff5971b2854189], [SpanId -> 6d9c0a0adc6a11cc] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] vary: Origin
[2022-11-19 19:47:13 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d3ff5971b2854189], [SpanId -> 6d9c0a0adc6a11cc] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] x-content-type-options: nosniff
[2022-11-19 19:47:13 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d3ff5971b2854189], [SpanId -> 6d9c0a0adc6a11cc] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] x-xss-protection: 1; mode=block
[2022-11-19 19:47:13 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d3ff5971b2854189], [SpanId -> 6d9c0a0adc6a11cc] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] 
[2022-11-19 19:47:13 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d3ff5971b2854189], [SpanId -> 6d9c0a0adc6a11cc] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] {"uuid":"b30e603f-6a5f-411e-943e-c87246442381","errors":[{"code":"500","message":"Cannot invoke \"com.devd.spring.bookstorepaymentservice.repository.dao.UserPaymentCustomer.getPaymentCustomerId()\" because \"paymentCustomer\" is null"}]}
[2022-11-19 19:47:13 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> d3ff5971b2854189], [SpanId -> 6d9c0a0adc6a11cc] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] <--- END HTTP (237-byte body)
[2022-11-19 19:47:13 ICT] ERROR [Service Name -> bookstore-order-service], [TraceId -> d3ff5971b2854189], [SpanId -> 6d9c0a0adc6a11cc] 
      <http-nio-7001-exec-9> com.devd.spring.bookstorecommons.exception.GlobalExceptionHandler : Something went wrong, Exception : Not a valid Payment Method
[2022-11-19 19:47:40 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 3fd5d46eccbcee37], [SpanId -> f1f3470c3e479591] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] ---> GET http://bookstore-payment-service/paymentMethod/pm_1M5qQEG9R9y827nt0gZwbDEN HTTP/1.1
[2022-11-19 19:47:40 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 3fd5d46eccbcee37], [SpanId -> f1f3470c3e479591] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsid2ViIl0sInVzZXJfaWQiOiJ4Y3ZjdmJ2di1iYTVkLTRiOTItODViZS1kZmdkZmdkZmdkZmciLCJ1c2VyX25hbWUiOiJhZG1pbi5hZG1pbiIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSJdLCJleHAiOjE2NjkxMjEyMTksImF1dGhvcml0aWVzIjpbIlNUQU5EQVJEX1VTRVIiLCJBRE1JTl9VU0VSIl0sImp0aSI6IjFmYjk0NTQzLWI3ODQtNDVjNy1hMGYzLTVmMDA4MDQ4NDMwZSIsImNsaWVudF9pZCI6IjkzZWQ0NTNlLWI3YWMtNDE5Mi1hNmQ0LWM0NWZhZTBkOTlhYyJ9.jyhZN7Rxfv23bXX367bgacrr1I3ANBTKirLVRF6ZlTP4wSsWmXjm8vDGhN0_GimlAwlb5YfQbSmTTxBdzbNtI5X66nimJ-rELb2TX91EdPDIlXvENsk8R4OummPxw-9H4LsTrIc7wsVkXkR5NjaTTc06Oks6eOFzB5Rt5wxuHtW7uokqkpj85WyyASmpOlXrfwiOib3fykvGU8kml79m3X0No1PXkvRcoxS_E2aOYEAGjJNqLiaqeCG8NBBvmWyUekXOsE0yd9FsM6cOFc5jLpJ6Zmv9z-i4-000RBGrPHSl7KTR0cdv6987dn1u5QPlJwrzEFH-4x9sy6To5uzz2A
[2022-11-19 19:47:40 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 3fd5d46eccbcee37], [SpanId -> f1f3470c3e479591] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] ---> END HTTP (0-byte body)
[2022-11-19 19:47:40 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 3fd5d46eccbcee37], [SpanId -> f1f3470c3e479591] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] <--- HTTP/1.1 500 (624ms)
[2022-11-19 19:47:40 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 3fd5d46eccbcee37], [SpanId -> f1f3470c3e479591] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] access-control-allow-headers: *
[2022-11-19 19:47:40 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 3fd5d46eccbcee37], [SpanId -> f1f3470c3e479591] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] access-control-allow-methods: *
[2022-11-19 19:47:40 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 3fd5d46eccbcee37], [SpanId -> f1f3470c3e479591] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] access-control-allow-origin: *
[2022-11-19 19:47:40 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 3fd5d46eccbcee37], [SpanId -> f1f3470c3e479591] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] cache-control: no-cache, no-store, max-age=0, must-revalidate
[2022-11-19 19:47:40 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 3fd5d46eccbcee37], [SpanId -> f1f3470c3e479591] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] connection: close
[2022-11-19 19:47:40 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 3fd5d46eccbcee37], [SpanId -> f1f3470c3e479591] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] content-type: application/json
[2022-11-19 19:47:40 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 3fd5d46eccbcee37], [SpanId -> f1f3470c3e479591] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] date: Sat, 19 Nov 2022 12:47:40 GMT
[2022-11-19 19:47:40 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 3fd5d46eccbcee37], [SpanId -> f1f3470c3e479591] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] expires: 0
[2022-11-19 19:47:40 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 3fd5d46eccbcee37], [SpanId -> f1f3470c3e479591] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] pragma: no-cache
[2022-11-19 19:47:40 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 3fd5d46eccbcee37], [SpanId -> f1f3470c3e479591] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] transfer-encoding: chunked
[2022-11-19 19:47:40 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 3fd5d46eccbcee37], [SpanId -> f1f3470c3e479591] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] vary: Access-Control-Request-Headers
[2022-11-19 19:47:40 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 3fd5d46eccbcee37], [SpanId -> f1f3470c3e479591] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] vary: Access-Control-Request-Method
[2022-11-19 19:47:40 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 3fd5d46eccbcee37], [SpanId -> f1f3470c3e479591] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] vary: Origin
[2022-11-19 19:47:40 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 3fd5d46eccbcee37], [SpanId -> f1f3470c3e479591] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] x-content-type-options: nosniff
[2022-11-19 19:47:40 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 3fd5d46eccbcee37], [SpanId -> f1f3470c3e479591] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] x-xss-protection: 1; mode=block
[2022-11-19 19:47:40 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 3fd5d46eccbcee37], [SpanId -> f1f3470c3e479591] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] 
[2022-11-19 19:47:40 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 3fd5d46eccbcee37], [SpanId -> f1f3470c3e479591] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] {"uuid":"c74488ce-3722-4f4f-aedb-7ae99834314f","errors":[{"code":"500","message":"Cannot invoke \"com.devd.spring.bookstorepaymentservice.repository.dao.UserPaymentCustomer.getPaymentCustomerId()\" because \"paymentCustomer\" is null"}]}
[2022-11-19 19:47:40 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 3fd5d46eccbcee37], [SpanId -> f1f3470c3e479591] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] <--- END HTTP (237-byte body)
[2022-11-19 19:47:40 ICT] ERROR [Service Name -> bookstore-order-service], [TraceId -> 3fd5d46eccbcee37], [SpanId -> f1f3470c3e479591] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.exception.GlobalExceptionHandler : Something went wrong, Exception : Not a valid Payment Method
[2022-11-19 19:48:03 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 2ab8cbd878b1a55d], [SpanId -> 28f7a1c7dad04a5d] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] ---> GET http://bookstore-payment-service/paymentMethod/pm_1M5qQEG9R9y827nt0gZwbDEN HTTP/1.1
[2022-11-19 19:48:03 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 2ab8cbd878b1a55d], [SpanId -> 28f7a1c7dad04a5d] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsid2ViIl0sInVzZXJfaWQiOiI0MDgzZjFlZS1hODA2LTQ1YmYtYmU0OC1hMjM1OTAwNThkNzIiLCJ1c2VyX25hbWUiOiJwaGFtZGF0Iiwic2NvcGUiOlsicmVhZCIsIndyaXRlIl0sImV4cCI6MTY2OTEyMTI3OCwiYXV0aG9yaXRpZXMiOlsiU1RBTkRBUkRfVVNFUiJdLCJqdGkiOiJhNWNkNDcxZS05NTVmLTRhZjctOGJkMy0zY2Y2OGUwMTIzMTMiLCJjbGllbnRfaWQiOiI5M2VkNDUzZS1iN2FjLTQxOTItYTZkNC1jNDVmYWUwZDk5YWMifQ.fa7yJlrVot4XpbwhuOdiYwTCAvaGPUpLovaD8uvqkw0eiXjST1pS4r_yjcBfqYQgIIKNgic2hBc0Eua5XX82ezMnOeAM-peK6Tn456NS7ONL2DGzTOA3VgnDauV9QUd0Sadqqrnb1BO2PmCzzhe5BWk9M6mSVMelIfB9BwuC49npmSzE-J79s3QDuQzvd4O3Lr5Xd5EKVe7ufsH3gS6vKuBzHjLQQs7mC5maGI6wFxz_K1zQer3sjQkmBBamkrqS32WzpMKREo2tzrPrJOm-7e0dYFAgd6lcyC3mStLh0mLO2qm9Rf6hVas4Q6aqULTbMc5csavojgyVQwIHBLtITQ
[2022-11-19 19:48:03 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 2ab8cbd878b1a55d], [SpanId -> 28f7a1c7dad04a5d] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] ---> END HTTP (0-byte body)
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 2ab8cbd878b1a55d], [SpanId -> 28f7a1c7dad04a5d] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] <--- HTTP/1.1 200 (677ms)
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 2ab8cbd878b1a55d], [SpanId -> 28f7a1c7dad04a5d] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] access-control-allow-headers: *
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 2ab8cbd878b1a55d], [SpanId -> 28f7a1c7dad04a5d] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] access-control-allow-methods: *
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 2ab8cbd878b1a55d], [SpanId -> 28f7a1c7dad04a5d] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] access-control-allow-origin: *
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 2ab8cbd878b1a55d], [SpanId -> 28f7a1c7dad04a5d] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] cache-control: no-cache, no-store, max-age=0, must-revalidate
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 2ab8cbd878b1a55d], [SpanId -> 28f7a1c7dad04a5d] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] connection: keep-alive
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 2ab8cbd878b1a55d], [SpanId -> 28f7a1c7dad04a5d] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] content-type: application/json
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 2ab8cbd878b1a55d], [SpanId -> 28f7a1c7dad04a5d] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] date: Sat, 19 Nov 2022 12:48:04 GMT
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 2ab8cbd878b1a55d], [SpanId -> 28f7a1c7dad04a5d] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] expires: 0
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 2ab8cbd878b1a55d], [SpanId -> 28f7a1c7dad04a5d] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] keep-alive: timeout=60
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 2ab8cbd878b1a55d], [SpanId -> 28f7a1c7dad04a5d] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] pragma: no-cache
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 2ab8cbd878b1a55d], [SpanId -> 28f7a1c7dad04a5d] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] transfer-encoding: chunked
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 2ab8cbd878b1a55d], [SpanId -> 28f7a1c7dad04a5d] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] vary: Access-Control-Request-Headers
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 2ab8cbd878b1a55d], [SpanId -> 28f7a1c7dad04a5d] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] vary: Access-Control-Request-Method
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 2ab8cbd878b1a55d], [SpanId -> 28f7a1c7dad04a5d] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] vary: Origin
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 2ab8cbd878b1a55d], [SpanId -> 28f7a1c7dad04a5d] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] x-content-type-options: nosniff
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 2ab8cbd878b1a55d], [SpanId -> 28f7a1c7dad04a5d] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] x-xss-protection: 1; mode=block
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 2ab8cbd878b1a55d], [SpanId -> 28f7a1c7dad04a5d] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] 
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 2ab8cbd878b1a55d], [SpanId -> 28f7a1c7dad04a5d] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] {"paymentMethodId":"pm_1M5qQEG9R9y827nt0gZwbDEN","cardType":"visa","cardLast4Digits":"1111","cardExpirationMonth":10,"cardExpirationYear":2023,"cardCountry":"US"}
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 2ab8cbd878b1a55d], [SpanId -> 28f7a1c7dad04a5d] 
      <http-nio-7001-exec-1> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] <--- END HTTP (162-byte body)
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 6eabbce19993b544], [SpanId -> 4cea4cca97b6a8fa] 
      <http-nio-7001-exec-3> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] ---> GET http://bookstore-payment-service/paymentMethod/pm_1M5qQEG9R9y827nt0gZwbDEN HTTP/1.1
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 6eabbce19993b544], [SpanId -> 4cea4cca97b6a8fa] 
      <http-nio-7001-exec-3> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsid2ViIl0sInVzZXJfaWQiOiI0MDgzZjFlZS1hODA2LTQ1YmYtYmU0OC1hMjM1OTAwNThkNzIiLCJ1c2VyX25hbWUiOiJwaGFtZGF0Iiwic2NvcGUiOlsicmVhZCIsIndyaXRlIl0sImV4cCI6MTY2OTEyMTI3OCwiYXV0aG9yaXRpZXMiOlsiU1RBTkRBUkRfVVNFUiJdLCJqdGkiOiJhNWNkNDcxZS05NTVmLTRhZjctOGJkMy0zY2Y2OGUwMTIzMTMiLCJjbGllbnRfaWQiOiI5M2VkNDUzZS1iN2FjLTQxOTItYTZkNC1jNDVmYWUwZDk5YWMifQ.fa7yJlrVot4XpbwhuOdiYwTCAvaGPUpLovaD8uvqkw0eiXjST1pS4r_yjcBfqYQgIIKNgic2hBc0Eua5XX82ezMnOeAM-peK6Tn456NS7ONL2DGzTOA3VgnDauV9QUd0Sadqqrnb1BO2PmCzzhe5BWk9M6mSVMelIfB9BwuC49npmSzE-J79s3QDuQzvd4O3Lr5Xd5EKVe7ufsH3gS6vKuBzHjLQQs7mC5maGI6wFxz_K1zQer3sjQkmBBamkrqS32WzpMKREo2tzrPrJOm-7e0dYFAgd6lcyC3mStLh0mLO2qm9Rf6hVas4Q6aqULTbMc5csavojgyVQwIHBLtITQ
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 6eabbce19993b544], [SpanId -> 4cea4cca97b6a8fa] 
      <http-nio-7001-exec-3> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] ---> END HTTP (0-byte body)
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 6eabbce19993b544], [SpanId -> 4cea4cca97b6a8fa] 
      <http-nio-7001-exec-3> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] <--- HTTP/1.1 200 (399ms)
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 6eabbce19993b544], [SpanId -> 4cea4cca97b6a8fa] 
      <http-nio-7001-exec-3> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] access-control-allow-headers: *
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 6eabbce19993b544], [SpanId -> 4cea4cca97b6a8fa] 
      <http-nio-7001-exec-3> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] access-control-allow-methods: *
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 6eabbce19993b544], [SpanId -> 4cea4cca97b6a8fa] 
      <http-nio-7001-exec-3> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] access-control-allow-origin: *
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 6eabbce19993b544], [SpanId -> 4cea4cca97b6a8fa] 
      <http-nio-7001-exec-3> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] cache-control: no-cache, no-store, max-age=0, must-revalidate
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 6eabbce19993b544], [SpanId -> 4cea4cca97b6a8fa] 
      <http-nio-7001-exec-3> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] connection: keep-alive
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 6eabbce19993b544], [SpanId -> 4cea4cca97b6a8fa] 
      <http-nio-7001-exec-3> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] content-type: application/json
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 6eabbce19993b544], [SpanId -> 4cea4cca97b6a8fa] 
      <http-nio-7001-exec-3> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] date: Sat, 19 Nov 2022 12:48:04 GMT
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 6eabbce19993b544], [SpanId -> 4cea4cca97b6a8fa] 
      <http-nio-7001-exec-3> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] expires: 0
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 6eabbce19993b544], [SpanId -> 4cea4cca97b6a8fa] 
      <http-nio-7001-exec-3> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] keep-alive: timeout=60
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 6eabbce19993b544], [SpanId -> 4cea4cca97b6a8fa] 
      <http-nio-7001-exec-3> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] pragma: no-cache
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 6eabbce19993b544], [SpanId -> 4cea4cca97b6a8fa] 
      <http-nio-7001-exec-3> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] transfer-encoding: chunked
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 6eabbce19993b544], [SpanId -> 4cea4cca97b6a8fa] 
      <http-nio-7001-exec-3> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] vary: Access-Control-Request-Headers
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 6eabbce19993b544], [SpanId -> 4cea4cca97b6a8fa] 
      <http-nio-7001-exec-3> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] vary: Access-Control-Request-Method
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 6eabbce19993b544], [SpanId -> 4cea4cca97b6a8fa] 
      <http-nio-7001-exec-3> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] vary: Origin
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 6eabbce19993b544], [SpanId -> 4cea4cca97b6a8fa] 
      <http-nio-7001-exec-3> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] x-content-type-options: nosniff
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 6eabbce19993b544], [SpanId -> 4cea4cca97b6a8fa] 
      <http-nio-7001-exec-3> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] x-xss-protection: 1; mode=block
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 6eabbce19993b544], [SpanId -> 4cea4cca97b6a8fa] 
      <http-nio-7001-exec-3> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] 
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 6eabbce19993b544], [SpanId -> 4cea4cca97b6a8fa] 
      <http-nio-7001-exec-3> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] {"paymentMethodId":"pm_1M5qQEG9R9y827nt0gZwbDEN","cardType":"visa","cardLast4Digits":"1111","cardExpirationMonth":10,"cardExpirationYear":2023,"cardCountry":"US"}
[2022-11-19 19:48:04 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> 6eabbce19993b544], [SpanId -> 4cea4cca97b6a8fa] 
      <http-nio-7001-exec-3> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] <--- END HTTP (162-byte body)
[2022-11-19 19:48:07 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b0ce2f4ef152b128], [SpanId -> 0f4d099872f63588] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] ---> GET http://bookstore-payment-service/paymentMethod/pm_1M5qQEG9R9y827nt0gZwbDEN HTTP/1.1
[2022-11-19 19:48:07 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b0ce2f4ef152b128], [SpanId -> 0f4d099872f63588] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsid2ViIl0sInVzZXJfaWQiOiI0MDgzZjFlZS1hODA2LTQ1YmYtYmU0OC1hMjM1OTAwNThkNzIiLCJ1c2VyX25hbWUiOiJwaGFtZGF0Iiwic2NvcGUiOlsicmVhZCIsIndyaXRlIl0sImV4cCI6MTY2OTEyMTI3OCwiYXV0aG9yaXRpZXMiOlsiU1RBTkRBUkRfVVNFUiJdLCJqdGkiOiJhNWNkNDcxZS05NTVmLTRhZjctOGJkMy0zY2Y2OGUwMTIzMTMiLCJjbGllbnRfaWQiOiI5M2VkNDUzZS1iN2FjLTQxOTItYTZkNC1jNDVmYWUwZDk5YWMifQ.fa7yJlrVot4XpbwhuOdiYwTCAvaGPUpLovaD8uvqkw0eiXjST1pS4r_yjcBfqYQgIIKNgic2hBc0Eua5XX82ezMnOeAM-peK6Tn456NS7ONL2DGzTOA3VgnDauV9QUd0Sadqqrnb1BO2PmCzzhe5BWk9M6mSVMelIfB9BwuC49npmSzE-J79s3QDuQzvd4O3Lr5Xd5EKVe7ufsH3gS6vKuBzHjLQQs7mC5maGI6wFxz_K1zQer3sjQkmBBamkrqS32WzpMKREo2tzrPrJOm-7e0dYFAgd6lcyC3mStLh0mLO2qm9Rf6hVas4Q6aqULTbMc5csavojgyVQwIHBLtITQ
[2022-11-19 19:48:07 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b0ce2f4ef152b128], [SpanId -> 0f4d099872f63588] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] ---> END HTTP (0-byte body)
[2022-11-19 19:48:07 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b0ce2f4ef152b128], [SpanId -> 0f4d099872f63588] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] <--- HTTP/1.1 200 (771ms)
[2022-11-19 19:48:07 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b0ce2f4ef152b128], [SpanId -> 0f4d099872f63588] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] access-control-allow-headers: *
[2022-11-19 19:48:08 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b0ce2f4ef152b128], [SpanId -> 0f4d099872f63588] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] access-control-allow-methods: *
[2022-11-19 19:48:08 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b0ce2f4ef152b128], [SpanId -> 0f4d099872f63588] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] access-control-allow-origin: *
[2022-11-19 19:48:08 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b0ce2f4ef152b128], [SpanId -> 0f4d099872f63588] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] cache-control: no-cache, no-store, max-age=0, must-revalidate
[2022-11-19 19:48:08 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b0ce2f4ef152b128], [SpanId -> 0f4d099872f63588] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] connection: keep-alive
[2022-11-19 19:48:08 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b0ce2f4ef152b128], [SpanId -> 0f4d099872f63588] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] content-type: application/json
[2022-11-19 19:48:08 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b0ce2f4ef152b128], [SpanId -> 0f4d099872f63588] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] date: Sat, 19 Nov 2022 12:48:07 GMT
[2022-11-19 19:48:08 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b0ce2f4ef152b128], [SpanId -> 0f4d099872f63588] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] expires: 0
[2022-11-19 19:48:08 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b0ce2f4ef152b128], [SpanId -> 0f4d099872f63588] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] keep-alive: timeout=60
[2022-11-19 19:48:08 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b0ce2f4ef152b128], [SpanId -> 0f4d099872f63588] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] pragma: no-cache
[2022-11-19 19:48:08 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b0ce2f4ef152b128], [SpanId -> 0f4d099872f63588] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] transfer-encoding: chunked
[2022-11-19 19:48:08 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b0ce2f4ef152b128], [SpanId -> 0f4d099872f63588] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] vary: Access-Control-Request-Headers
[2022-11-19 19:48:08 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b0ce2f4ef152b128], [SpanId -> 0f4d099872f63588] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] vary: Access-Control-Request-Method
[2022-11-19 19:48:08 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b0ce2f4ef152b128], [SpanId -> 0f4d099872f63588] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] vary: Origin
[2022-11-19 19:48:08 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b0ce2f4ef152b128], [SpanId -> 0f4d099872f63588] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] x-content-type-options: nosniff
[2022-11-19 19:48:08 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b0ce2f4ef152b128], [SpanId -> 0f4d099872f63588] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] x-xss-protection: 1; mode=block
[2022-11-19 19:48:08 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b0ce2f4ef152b128], [SpanId -> 0f4d099872f63588] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] 
[2022-11-19 19:48:08 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b0ce2f4ef152b128], [SpanId -> 0f4d099872f63588] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] {"paymentMethodId":"pm_1M5qQEG9R9y827nt0gZwbDEN","cardType":"visa","cardLast4Digits":"1111","cardExpirationMonth":10,"cardExpirationYear":2023,"cardCountry":"US"}
[2022-11-19 19:48:08 ICT] DEBUG [Service Name -> bookstore-order-service], [TraceId -> b0ce2f4ef152b128], [SpanId -> 0f4d099872f63588] 
      <http-nio-7001-exec-4> com.devd.spring.bookstorecommons.feign.PaymentFeignClient : [PaymentFeignClient#getMyPaymentMethodById] <--- END HTTP (162-byte body)
[2022-11-19 19:50:03 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <AsyncResolver-bootstrap-executor-0> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2022-11-19 19:50:11 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <Thread-8> com.netflix.loadbalancer.PollingServerListUpdater : Shutting down the Executor Pool for PollingServerListUpdater
[2022-11-19 19:50:11 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <SpringContextShutdownHook> org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry : Unregistering application BOOKSTORE-ORDER-SERVICE with eureka with status DOWN
[2022-11-19 19:50:11 ICT] WARN [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <SpringContextShutdownHook> com.netflix.discovery.DiscoveryClient : Saw local status change event StatusChangeEvent [timestamp=1668862211429, current=DOWN, previous=UP]
[2022-11-19 19:50:11 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-InstanceInfoReplicator-0> com.netflix.discovery.DiscoveryClient : DiscoveryClient_BOOKSTORE-ORDER-SERVICE/192.168.1.10:bookstore-order-service:7001: registering service...
[2022-11-19 19:50:11 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-InstanceInfoReplicator-0> com.netflix.discovery.DiscoveryClient : DiscoveryClient_BOOKSTORE-ORDER-SERVICE/192.168.1.10:bookstore-order-service:7001 - registration status: 204
[2022-11-19 19:50:11 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <SpringContextShutdownHook> org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
[2022-11-19 19:50:11 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <SpringContextShutdownHook> org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor : Shutting down ExecutorService 'applicationTaskExecutor'
[2022-11-19 19:50:12 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <SpringContextShutdownHook> com.netflix.util.concurrent.ShutdownEnabledTimer : Shutdown hook removed for: NFLoadBalancer-PingTimer-bookstore-payment-service
[2022-11-19 19:50:12 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <SpringContextShutdownHook> com.netflix.util.concurrent.ShutdownEnabledTimer : Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:243)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:979)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
[2022-11-19 19:50:12 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <SpringContextShutdownHook> com.netflix.util.concurrent.ShutdownEnabledTimer : Shutdown hook removed for: NFLoadBalancer-PingTimer-bookstore-billing-service
[2022-11-19 19:50:12 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <SpringContextShutdownHook> com.netflix.util.concurrent.ShutdownEnabledTimer : Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:243)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:979)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
[2022-11-19 19:50:12 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <SpringContextShutdownHook> com.netflix.util.concurrent.ShutdownEnabledTimer : Shutdown hook removed for: NFLoadBalancer-PingTimer-bookstore-catalog-service
[2022-11-19 19:50:12 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <SpringContextShutdownHook> com.netflix.util.concurrent.ShutdownEnabledTimer : Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:243)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:979)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
[2022-11-19 19:50:12 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <SpringContextShutdownHook> com.netflix.discovery.DiscoveryClient : Shutting down DiscoveryClient ...
[2022-11-19 19:50:15 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <SpringContextShutdownHook> com.netflix.discovery.DiscoveryClient : Unregistering ...
[2022-11-19 19:50:15 ICT] ERROR [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <SpringContextShutdownHook> com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:941)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:919)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:242)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:235)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:660)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:333)
	at java.base/java.net.Socket.connect(Socket.java:648)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 42 common frames omitted
[2022-11-19 19:50:15 ICT] WARN [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <SpringContextShutdownHook> com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient : Request execution failed with message: java.net.ConnectException: Connection refused
[2022-11-19 19:50:15 ICT] ERROR [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <SpringContextShutdownHook> com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:941)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:919)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:242)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:235)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:660)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:333)
	at java.base/java.net.Socket.connect(Socket.java:648)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 43 common frames omitted
[2022-11-19 19:50:15 ICT] WARN [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <SpringContextShutdownHook> com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient : Request execution failed with message: java.net.ConnectException: Connection refused
[2022-11-19 19:50:15 ICT] ERROR [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <SpringContextShutdownHook> com.netflix.discovery.DiscoveryClient : DiscoveryClient_BOOKSTORE-ORDER-SERVICE/192.168.1.10:bookstore-order-service:7001 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:941)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:919)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:242)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:235)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
[2022-11-19 19:50:15 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <SpringContextShutdownHook> com.netflix.discovery.DiscoveryClient : Completed shut down of DiscoveryClient
[2022-11-19 19:50:15 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <SpringContextShutdownHook> com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Shutdown initiated...
[2022-11-19 19:50:15 ICT] INFO [Service Name -> bookstore-order-service], [TraceId -> ], [SpanId -> ] 
      <SpringContextShutdownHook> com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Shutdown completed.
